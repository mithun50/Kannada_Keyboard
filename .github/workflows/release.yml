name: Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  setup:
    name: Setup Gradle Wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 4.10.3

      - name: Generate Gradle Wrapper
        run: |
          if [ ! -f "gradlew" ]; then
            echo "Generating Gradle wrapper..."
            gradle wrapper --gradle-version 4.10.3
            chmod +x gradlew
          else
            echo "Gradle wrapper already exists"
            chmod +x gradlew
          fi

      - name: Upload Gradle Wrapper
        uses: actions/upload-artifact@v4
        with:
          name: gradle-wrapper-release
          path: |
            gradle/
            gradlew
            gradlew.bat
          retention-days: 1

  release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Gradle Wrapper
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper-release

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-release-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-release-
            ${{ runner.os }}-gradle-

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace --no-daemon

      - name: Rename APKs
        run: |
          mkdir -p release-output
          cp app/build/outputs/apk/debug/app-debug.apk release-output/TypeKannada-v${{ steps.get_version.outputs.VERSION }}-debug.apk
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            cp app/build/outputs/apk/release/app-release-unsigned.apk release-output/TypeKannada-v${{ steps.get_version.outputs.VERSION }}-release-unsigned.apk
          fi

      - name: Get APK sizes
        id: apk_sizes
        run: |
          DEBUG_SIZE=$(du -h release-output/TypeKannada-v${{ steps.get_version.outputs.VERSION }}-debug.apk | cut -f1)
          RELEASE_SIZE=$(du -h release-output/TypeKannada-v${{ steps.get_version.outputs.VERSION }}-release-unsigned.apk | cut -f1)
          echo "debug_size=$DEBUG_SIZE" >> $GITHUB_OUTPUT
          echo "release_size=$RELEASE_SIZE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-output/*.apk
          body: |
            ## Type Kannada v${{ steps.get_version.outputs.VERSION }}

            ### 📱 APK Downloads

            | Variant | Size | Description |
            |---------|------|-------------|
            | **Debug** | ${{ steps.apk_sizes.outputs.debug_size }} | For testing and development |
            | **Release** | ${{ steps.apk_sizes.outputs.release_size }} | Production build (unsigned) |

            ### 🎨 Features

            - ✅ Customizable Kannada font styles
            - ✅ Multiple keyboard layouts (Kannada, English, Numbers)
            - ✅ Font preview and selection dialog
            - ✅ Persistent font preferences

            ### 📥 Installation

            1. Download the appropriate APK
            2. Enable "Install from Unknown Sources" in Android settings
            3. Install the APK
            4. Go to **Settings → Language & Input → Type Kannada**
            5. Enable the keyboard

            ### ⚙️ Font Setup

            After installation:
            1. Open **Type Kannada** app
            2. Tap **"ಫಾಂಟ್ ಶೈಲಿ / Font Style"** button
            3. Choose your preferred font from:
               - Default (System)
               - Regular Style
               - Bold Style
               - Serif Style
               - Traditional Style
            4. Tap **"Apply Font"**
            5. Start typing with your new font!

            ### 📝 Changes

            Check the commit history for detailed changes in this release.

            ### 🔗 Links

            - [Source Code](https://github.com/${{ github.repository }})
            - [Issues](https://github.com/${{ github.repository }}/issues)
            - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)

            ---
            🤖 Built with GitHub Actions
          draft: false
          prerelease: false

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apks-v${{ steps.get_version.outputs.VERSION }}
          path: release-output/*.apk
          retention-days: 90
