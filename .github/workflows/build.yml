name: Build APK

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop
  workflow_dispatch:
    inputs:
      variant:
        description: 'Build variant'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  setup:
    name: Setup Gradle Wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 4.10.3

      - name: Generate Gradle Wrapper
        run: |
          if [ ! -f "gradlew" ]; then
            echo "Generating Gradle wrapper..."
            gradle wrapper --gradle-version 4.10.3
            chmod +x gradlew
          else
            echo "Gradle wrapper already exists"
            chmod +x gradlew
          fi

      - name: Cache Gradle wrapper
        uses: actions/cache@v4
        with:
          path: |
            gradle/wrapper
            gradlew
            gradlew.bat
          key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-wrapper-

      - name: Upload Gradle Wrapper
        uses: actions/upload-artifact@v4
        with:
          name: gradle-wrapper
          path: |
            gradle/
            gradlew
            gradlew.bat
          retention-days: 1

  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Gradle Wrapper
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Lint
        run: ./gradlew lint --stacktrace --no-daemon

      - name: Upload Lint Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results-${{ github.sha }}
          path: |
            app/build/reports/lint-results*.html
            app/build/reports/lint-results*.xml
          retention-days: 7

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [setup, lint]
    strategy:
      fail-fast: false
      matrix:
        variant: [debug, release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Gradle Wrapper
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build ${{ matrix.variant }} APK
        run: |
          if [ "${{ matrix.variant }}" == "debug" ]; then
            ./gradlew assembleDebug --stacktrace --no-daemon
          else
            ./gradlew assembleRelease --stacktrace --no-daemon
          fi

      - name: Rename APK
        run: |
          mkdir -p output
          if [ "${{ matrix.variant }}" == "debug" ]; then
            cp app/build/outputs/apk/debug/app-debug.apk output/TypeKannada-${{ matrix.variant }}-${{ github.sha }}.apk
          else
            if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
              cp app/build/outputs/apk/release/app-release-unsigned.apk output/TypeKannada-${{ matrix.variant }}-unsigned-${{ github.sha }}.apk
            fi
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: TypeKannada-${{ matrix.variant }}-${{ github.sha }}
          path: output/*.apk
          retention-days: 30

      - name: Get APK info
        id: apk_info
        run: |
          APK_PATH=$(find output -name "*.apk" | head -n 1)
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "size=$APK_SIZE" >> $GITHUB_OUTPUT
          echo "path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### 📦 APK Build Complete - ${{ matrix.variant }}

              **Size**: ${{ steps.apk_info.outputs.size }}
              **Commit**: \`${{ github.sha }}\`
              **Artifact**: \`TypeKannada-${{ matrix.variant }}-${{ github.sha }}\`

              Download from the Actions artifacts above.`
            })

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Build result
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "✅ All builds completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some builds failed. Check logs above." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- **Debug APK**: \`TypeKannada-debug-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Release APK**: \`TypeKannada-release-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Download" >> $GITHUB_STEP_SUMMARY
          echo "Go to the **Actions** tab above to download artifacts." >> $GITHUB_STEP_SUMMARY
